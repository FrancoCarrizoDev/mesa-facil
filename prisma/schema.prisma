generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email String  @unique
  username  String?
  restaurants Restaurant[]
}

model Restaurant {
  id    String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name String  
  phone  String
  address  String
  attentionSchedule AttentionSchedule[]
  user User @relation(fields: [userId], references: [id])
  userId String @db.Uuid
  slug String? @unique
  @@index([slug], name: "slug")
}

model AttentionSchedule {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  restaurant  Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId String @db.Uuid
  day String
  start String
  end String
  reservations Reservation[]
}

model Dinner {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name String
  last_name String
  phone String
  email String
  birthday String
  reservation Reservation[]
}

model Reservation {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  attentionSchedule  AttentionSchedule @relation(fields: [attentionScheduleId], references: [id])
  attentionScheduleId String @db.Uuid
  dinner  Dinner? @relation(fields: [dinnerId], references: [id])
  dinnerId String? @db.Uuid
  date String
  people String
  message String
  code String
  status ReservationStatus @relation(fields: [statusId], references: [id])
  statusId Int 
}

model ReservationStatus {
  // auto incrementalid
  id      Int     @id @default(autoincrement())
  reservation Reservation[]
  status String
}